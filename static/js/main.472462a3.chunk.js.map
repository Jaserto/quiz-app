{"version":3,"sources":["components/Cuestionario.js","App.js","index.js"],"names":["Cuestionario","handleNextQuestion","showAnswers","handleAnswer","data","question","correct_answer","answers","className","dangerouslySetInnerHTML","__html","map","answer","idx","bgColor","textColor","key","onClick","App","useState","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","setShowAnswers","useEffect","fetch","then","res","json","results","incorrect_answers","sort","Math","random","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAgDeA,EA5CM,SAAC,GAAqG,IAAnGC,EAAkG,EAAlGA,mBAAoBC,EAA8E,EAA9EA,YAAaC,EAAiE,EAAjEA,aAAiE,IAAnDC,KAAQC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,QAIrG,OACI,6BACI,yBAAKC,UAAU,sDACX,wBACIA,UAAU,WACVC,wBAAyB,CAAEC,OAAQL,MAG3C,yBAAKG,UAAU,iCACVD,EAAQI,KAAI,SAACC,EAAQC,GAClB,IAAMC,EAAUZ,EAAcU,IAAWN,EAAiB,eAAiB,aAAe,WAEpFS,EAAYb,EAAc,aAAe,kBAE/C,OACI,4BACIc,IAAKH,EACLL,UAAS,UAAKM,EAAL,YAAgBC,EAAhB,kFAETE,QAAS,kBAAMd,EAAaS,IAC5BH,wBAAyB,CAAEC,OAAQE,QAK9CV,GACG,4BACIe,QAAShB,EACTO,UAAS,0GAFb,oBCiCLU,MA5Df,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAE2BF,mBAAS,GAFpC,mBAENG,EAFM,KAEQC,EAFR,OAGaJ,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAIyBN,oBAAS,GAJlC,mBAINjB,EAJM,KAIOwB,EAJP,KA6Cb,OAtCAC,qBAAU,WACRC,MAVsB,uEAWnBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACzB,GAEL,IAAMgB,EAAYhB,EAAK4B,QAAQrB,KAAI,SAACN,GAAD,mBAAC,eAE7BA,GAF4B,IAG/BE,QAAS,CACPF,EAASC,gBADF,mBACqBD,EAAS4B,oBACrCC,MAAK,kBAAMC,KAAKC,SAAW,WAIjCf,EAAaD,QAGhB,IAqBIA,EAAUiB,OAAS,EACxB,yBAAK7B,UAAU,aACZc,GAAgBF,EAAUiB,OACzB,wBAAI7B,UAAU,iCAAd,kBAA8DgB,GAC7D,kBAAC,EAAD,CAAcpB,KAAMgB,EAAUE,GAAenB,aAvB/B,SAACS,GACfV,GACCU,IAAWQ,EAAUE,GAAchB,gBACrCmB,EAASD,EAAQ,GAIrBE,GAAe,IAgB+DxB,YAAaA,EAAaD,mBAV/E,WACzBsB,EAAgBD,EAAe,GAC/BI,GAAe,OAYb,wBAAIlB,UAAU,sBAAd,eCvDN8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.472462a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Cuestionario = ({ handleNextQuestion, showAnswers, handleAnswer, data: { question, correct_answer, answers }, }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bg-white text-purple-800 p-10 rounded-lg shadow-md\">\r\n                <h2\r\n                    className=\"text-2xl\"\r\n                    dangerouslySetInnerHTML={{ __html: question }}\r\n                />\r\n            </div>\r\n            <div className=\" grid grid-cols-2 gap-6 mt-6 \">\r\n                {answers.map((answer, idx) => {\r\n                    const bgColor = showAnswers ? answer === correct_answer ? 'bg-green-500' : 'bg-red-500' : 'bg-white'\r\n\r\n                    const textColor = showAnswers ? 'text-white' : 'text-purple-800'\r\n\r\n                    return (\r\n                        <button\r\n                            key={idx}\r\n                            className={`${bgColor} ${textColor} p-4\r\n                            text-purple-800 font-semibold rounded shadow`}\r\n                            onClick={() => handleAnswer(answer)}\r\n                            dangerouslySetInnerHTML={{ __html: answer }}\r\n                        />\r\n\r\n                    )\r\n                })}\r\n                {showAnswers && (\r\n                    <button\r\n                        onClick={handleNextQuestion}\r\n                        className={`bg-purple-700 p-4\r\n                        text-white font-semibold rounded shadow col-start-2 ml-auto`}>\r\n                        Next Question\r\n                    </button>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Cuestionario;","import React, { useState, useEffect } from 'react';\nimport { Cuestionario } from './components'\n\nconst API_URL = 'https://opentdb.com/api.php?amount=10&category=14&difficlty=easy&type=multiple';\n\nconst API_URL_COMPUTERS = 'https://opentdb.com/api.php?amount=19&category=18&difficulty=medium';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n\n\n  useEffect(() => {\n    fetch(API_URL_COMPUTERS)\n      .then((res) => res.json())\n      .then((data) => {\n        //setQuestions(data.results); problema\n        const questions = data.results.map((question) =>\n          ({\n            ...question,\n            answers: [\n              question.correct_answer, ...question.incorrect_answers,\n            ].sort(() => Math.random() - 0.5),\n\n          }));\n\n        setQuestions(questions);\n      });\n\n  }, []);\n\n  const handleAnswer = (answer) => {\n    if (!showAnswers) {\n      if (answer === questions[currentIndex].correct_answer) {\n        setScore(score + 1);\n      }\n    }\n\n    setShowAnswers(true);\n    /*   const newIndex = currentIndex + 1\n      setCurrentIndex(newIndex) */\n\n  }\n\n  const handleNextQuestion = () => {\n    setCurrentIndex(currentIndex + 1);\n    setShowAnswers(false);\n  }\n\n\n  return questions.length > 0 ? (\n    <div className=\"container\">\n      {currentIndex >= questions.length ? (\n        <h1 className=\"text-3xl font-bold text-white\">Your score was {score}</h1>) :\n        (<Cuestionario data={questions[currentIndex]} handleAnswer={handleAnswer} showAnswers={showAnswers} handleNextQuestion={handleNextQuestion} />\n        )}\n    </div>\n  ) : (\n      <h2 className=\"text-2xl font-bold\">Loading...</h2 >\n    );\n\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}